<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="sqlDataSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="sqlDataSource1.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0ic3FsRGF0YVNvdXJjZTEiPjxWaWV3IE5hbWU9IlF1ZXJ5Ij48RmllbGQgTmFtZT0icHJvdmlkZXJfaWQiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJmYWNpbGl0eV9uYW1lIiBUeXBlPSJTdHJpbmciIC8+PC9WaWV3PjwvRGF0YVNldD4=</value>
  </data>
  <metadata name="sqlDataSource2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 63</value>
  </metadata>
  <data name="customSqlQuery2.Sql" xml:space="preserve">
    <value>SELECT 
    facility_name,
    SUM(totalDebit) as totalDebit,
    SUM(totalCredit) as totalCredit,
    SUM(balance) as grandTotalBalance,
		MAX(latestAmount),
		MAX(latestTime)
FROM (
    SELECT 
        endOfMonth,
        facility_name,
        SUM(debit) as totalDebit,
        SUM(credit) as totalCredit,
        SUM(credit) - SUM(debit) as balance,
        MAX(paymentId) as paymentId,
				latestAmount,
				latestTime
    FROM (
        SELECT 
            LAST_DAY(CL.date_of_consultation) as endOfMonth,
            P.facility_name as facility_name,
            0 as debit,
            SUM(CL.qty * CL.unit_price) as credit,
            null as paymentId,
						null as latestAmount,
						null as latestTime
        FROM 
            claims_details CL
        INNER JOIN 
            provider_api P ON P.provider_id = CL.provider_id
         WHERE
		CL.date_of_consultation &gt; '0000-00-00'
	  and FIND_IN_SET(CL.provider_id, @provider) &gt; 0 
--             CL.provider_id=9
        GROUP BY 
            LAST_DAY(CL.date_of_consultation), P.facility_name

        UNION

        SELECT 
            LAST_DAY(CL.date_of_consultation) as endOfMonth,
            P.facility_name as facility_name,
            COALESCE(SUM(CL.qty * CL.unit_price) - sum(qty_finance*unit_price_finance), 0) as debit,
            0 as credit,
            null as paymentId,
						null as latestAmount,
						null as latestTime
        FROM 
            claims_details CL
        INNER JOIN 
            provider_api P ON P.provider_id = CL.provider_id
         WHERE
		CL.date_of_consultation &gt; '0000-00-00'
	  and FIND_IN_SET(CL.provider_id, @provider) &gt; 0 
--             CL.provider_id=9
        GROUP BY 
            LAST_DAY(CL.date_of_consultation), P.facility_name

        UNION

        SELECT 
            LAST_DAY(CL.date_of_consultation) as endOfMonth,
            P.facility_name as facility_name,
            CASE WHEN(CL.date_of_consultation between '2021-05-01' and '2023-01-31') then 0 else	((SUM(CL.qty * unit_price) - COALESCE(SUM(CL.qty * CL.unit_price) - sum(qty_finance*unit_price_finance), 0)) * P.tax_rate / 100) end as debit,
		0 as credit,
            null as paymentId,
						null as latestAmount,
						null as latestTime
        FROM 
            claims_details CL
        INNER JOIN 
            provider_api P ON P.provider_id = CL.provider_id
         WHERE
		CL.date_of_consultation &gt; '0000-00-00'
	  and FIND_IN_SET(CL.provider_id, @provider) &gt; 0 
--             CL.provider_id=9
        GROUP BY 
            LAST_DAY(CL.date_of_consultation), P.facility_name

        UNION
				-- TPA START
				SELECT 
            LAST_DAY(CL.date_of_consultation) as endOfMonth,
            P.facility_name as facility_name,
            0 as debit,
            SUM(CL.qty * CL.unit_price) as credit,
            null as paymentId,
						null as latestAmount,
						null as latestTime
        FROM 
           afs_tpa.claims_details CL
        INNER JOIN 
            provider_api P ON P.provider_id = CL.provider_id
         WHERE
		CL.date_of_consultation &gt; '0000-00-00'
	  and FIND_IN_SET(CL.provider_id, @provider) &gt; 0 
--             CL.provider_id=9
        GROUP BY 
            LAST_DAY(CL.date_of_consultation), P.facility_name

        UNION

        SELECT 
            LAST_DAY(CL.date_of_consultation) as endOfMonth,
            P.facility_name as facility_name,
            COALESCE(SUM(CL.qty * CL.unit_price) - sum(qty_finance*unit_price_finance), 0) as debit,
            0 as credit,
            null as paymentId,
						null as latestAmount,
						null as latestTime
        FROM 
            afs_tpa.claims_details CL
        INNER JOIN 
            provider_api P ON P.provider_id = CL.provider_id
         WHERE
		CL.date_of_consultation &gt; '0000-00-00'
	  and FIND_IN_SET(CL.provider_id, @provider) &gt; 0 
--             CL.provider_id=9
        GROUP BY 
            LAST_DAY(CL.date_of_consultation), P.facility_name

        UNION

        SELECT 
            LAST_DAY(CL.date_of_consultation) as endOfMonth,
            P.facility_name as facility_name,
            CASE WHEN(CL.date_of_consultation between '2021-05-01' and '2023-01-31') then 0 else	((SUM(CL.qty * unit_price) - COALESCE(SUM(CL.qty * CL.unit_price) - sum(qty_finance*unit_price_finance), 0)) * P.tax_rate / 100) end as debit,
            0 as credit,
            null as paymentId,
						null as latestAmount,
						null as latestTime
        FROM 
            afs_tpa.claims_details CL
        INNER JOIN 
            provider_api P ON P.provider_id = CL.provider_id
         WHERE
		CL.date_of_consultation &gt; '0000-00-00'
	  and FIND_IN_SET(CL.provider_id, @provider) &gt; 0 
--             CL.provider_id=9
        GROUP BY 
            LAST_DAY(CL.date_of_consultation), P.facility_name
				-- TPA END
				
				UNION

        SELECT 
            PA.`timestamp` as endOfMonth,
            P.facility_name as facility_name,
            (CASE WHEN type='Debit' THEN PA.amount ELSE 0 END) as debit,
            (CASE WHEN type='Credit' THEN PA.amount ELSE 0 END) as credit,
            PA.id as paymentId,
						(SELECT amount FROM payment_advice where providerId=PA.providerId ORDER BY timestamp DESC LIMIT 1) as latestAmount,
						(SELECT timestamp FROM payment_advice where providerId=PA.providerId ORDER BY timestamp DESC LIMIT 1) as latestTime
        FROM 
            payment_advice PA,
            provider_api P
        WHERE 
		PA.timestamp &gt; '0000-00-00' and
		FIND_IN_SET(PA.providerId, @provider) &gt; 0 and
--             PA.providerId=9
--             AND 
						PA.providerId=P.provider_id
    ) as Result
    GROUP BY 
        endOfMonth, facility_name
) as AggregatedResults
GROUP BY 
    facility_name
ORDER BY 
    facility_name;</value>
  </data>
  <data name="sqlDataSource2.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0ic3FsRGF0YVNvdXJjZTIiPjxWaWV3IE5hbWU9IlF1ZXJ5Ij48RmllbGQgTmFtZT0iZmFjaWxpdHlfbmFtZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJ0b3RhbERlYml0IiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9InRvdGFsQ3JlZGl0IiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9ImdyYW5kVG90YWxCYWxhbmNlIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9Ik1BWChsYXRlc3RBbW91bnQpIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9Ik1BWChsYXRlc3RUaW1lKSIgVHlwZT0iVW5rbm93biIgLz48L1ZpZXc+PC9EYXRhU2V0Pg==</value>
  </data>
</root>